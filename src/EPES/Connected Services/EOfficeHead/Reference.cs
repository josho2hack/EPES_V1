//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EOfficeHead
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", ConfigurationName="EOfficeHead.AuthenHeaderOfficeSoap")]
    public interface AuthenHeaderOfficeSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice/AuthenHeaderOffice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<EOfficeHead.AuthenHeaderOfficeResponse> AuthenHeaderOfficeAsync(EOfficeHead.AuthenHeaderOfficeRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice")]
    public partial class DataUser
    {
        
        private bool authenField;
        
        private string idField;
        
        private string rPOSNUMField;
        
        private string tITLEField;
        
        private string fNAMEField;
        
        private string lNAMEField;
        
        private string pOSITION_MField;
        
        private string oFFICEIDField;
        
        private string oFFICENAMEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Authen
        {
            get
            {
                return this.authenField;
            }
            set
            {
                this.authenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RPOSNUM
        {
            get
            {
                return this.rPOSNUMField;
            }
            set
            {
                this.rPOSNUMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TITLE
        {
            get
            {
                return this.tITLEField;
            }
            set
            {
                this.tITLEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FNAME
        {
            get
            {
                return this.fNAMEField;
            }
            set
            {
                this.fNAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string LNAME
        {
            get
            {
                return this.lNAMEField;
            }
            set
            {
                this.lNAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string POSITION_M
        {
            get
            {
                return this.pOSITION_MField;
            }
            set
            {
                this.pOSITION_MField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string OFFICEID
        {
            get
            {
                return this.oFFICEIDField;
            }
            set
            {
                this.oFFICEIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string OFFICENAME
        {
            get
            {
                return this.oFFICENAMEField;
            }
            set
            {
                this.oFFICENAMEField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenHeaderOffice", WrapperNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", IsWrapped=true)]
    public partial class AuthenHeaderOfficeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", Order=0)]
        public string CheckUser;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", Order=1)]
        public string CheckPass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", Order=2)]
        public string OFFICEID;
        
        public AuthenHeaderOfficeRequest()
        {
        }
        
        public AuthenHeaderOfficeRequest(string CheckUser, string CheckPass, string OFFICEID)
        {
            this.CheckUser = CheckUser;
            this.CheckPass = CheckPass;
            this.OFFICEID = OFFICEID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenHeaderOfficeResponse", WrapperNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", IsWrapped=true)]
    public partial class AuthenHeaderOfficeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EOfficeHead.DataUser DataUser;
        
        public AuthenHeaderOfficeResponse()
        {
        }
        
        public AuthenHeaderOfficeResponse(EOfficeHead.DataUser DataUser)
        {
            this.DataUser = DataUser;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface AuthenHeaderOfficeSoapChannel : EOfficeHead.AuthenHeaderOfficeSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class AuthenHeaderOfficeSoapClient : System.ServiceModel.ClientBase<EOfficeHead.AuthenHeaderOfficeSoap>, EOfficeHead.AuthenHeaderOfficeSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AuthenHeaderOfficeSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(AuthenHeaderOfficeSoapClient.GetBindingForEndpoint(endpointConfiguration), AuthenHeaderOfficeSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenHeaderOfficeSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AuthenHeaderOfficeSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenHeaderOfficeSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AuthenHeaderOfficeSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenHeaderOfficeSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<EOfficeHead.AuthenHeaderOfficeResponse> EOfficeHead.AuthenHeaderOfficeSoap.AuthenHeaderOfficeAsync(EOfficeHead.AuthenHeaderOfficeRequest request)
        {
            return base.Channel.AuthenHeaderOfficeAsync(request);
        }
        
        public System.Threading.Tasks.Task<EOfficeHead.AuthenHeaderOfficeResponse> AuthenHeaderOfficeAsync(string CheckUser, string CheckPass, string OFFICEID)
        {
            EOfficeHead.AuthenHeaderOfficeRequest inValue = new EOfficeHead.AuthenHeaderOfficeRequest();
            inValue.CheckUser = CheckUser;
            inValue.CheckPass = CheckPass;
            inValue.OFFICEID = OFFICEID;
            return ((EOfficeHead.AuthenHeaderOfficeSoap)(this)).AuthenHeaderOfficeAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AuthenHeaderOfficeSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.AuthenHeaderOfficeSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.AuthenHeaderOfficeSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.AuthenHeaderOfficeSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://wservice.rd.go.th/ServiceEoffice/AuthenHeaderOffice.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            AuthenHeaderOfficeSoap,
            
            AuthenHeaderOfficeSoap12,
        }
    }
}
